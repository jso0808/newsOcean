<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminNotice">
	<select id="seq" resultType="Long">
		SELECT companyNo_seq.NEXTVAL FROM dual
	</select>
	
	<!-- 글 추가 -->
	<insert id="insertNotice" parameterType="com.sp.app.admin.notice.CompanyNotice">
		INSERT INTO company(companyNo, notice, memberNo, companySubject, companyContent, 
				companyDate, companyHitcount) 
			VALUES(#{companyNo}, #{notice}, #{memberNo}, #{companySubject}, #{companyContent}, 
				SYSDATE, 0)
	</insert>
	
	<!-- 파일 추가 -->
	<insert id="insertFile" parameterType="com.sp.app.admin.notice.CompanyNotice">
		INSERT INTO companyFile(fileNo, companyNo, saveFilename, originalFilename, fileSize )
		VALUES (comFileNo_seq.NEXTVAL, #{companyNo}, 
			#{saveFilename}, #{originalFilename}, #{fileSize})
	</insert>
	
	<sql id="where-list">
		<if test="condition=='all' ">
			( INSTR(companySubject, #{keyword}) &gt; 0
				OR DBMS_LOB.INSTR(companyContent, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject' ">
			INSTR(companySubject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content' ">
			DBMS_LOB.INSTR(companyContent, #{keyword}) &gt; 0
		</if>
		<if test="condition=='reg_date' ">
			( TO_CHAR(companyDate, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(companyDate, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>
	
	<!-- 데이터  dataCount 쿼리 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM company c
		JOIN member m ON c.memberNo = m.memberNo
		<where>
			<if test="keyword != null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<!-- 일반글 리스트 -->
	<select id="listNotice" parameterType="map" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT c.companyNo, notice, c.memberNo, m.name, companySubject, companyContent, 
			companyDate, companyHitcount, NVL(fileCount, 0) fileCount
		FROM company c
		JOIN member m ON c.memberNo = m.memberNo
		LEFT OUTER JOIN (
			SELECT fileNo, companyNo, COUNT(*) fileCount FROM CompanyFile
			GROUP BY fileNo, companyNo
		) f ON f.companyNo = c.companyNo
		<where>
			<if test="keyword != null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY c.companyNo DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 공지 등록 글 리스트 -->
	<select id="listNoticeTop" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT c.companyNo, notice, c.memberNo, m.name, companySubject, companyContent,
			TO_CHAR(companyDate, 'YYYY-MM-DD') companyDate, companyHitcount,
				NVL(fileCount, 0) fileCount 
		FROM company c
		JOIN member m ON m.memberNo = c.memberNo
		LEFT OUTER JOIN (
			SELECT fileNo, companyNo, COUNT(*) fileCount FROM CompanyFile
			GROUP BY fileNo, companyNo
		) f ON f.companyNo = c.companyNo
		WHERE notice = 1
		ORDER BY c.companyNo DESC
	</select>
	
	<!-- 파일 리스트 -->
	<select id="listFile" parameterType="Long" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT fileNo, companyNo, saveFilename, originalFilename, fileSize
		FROM CompanyFile
		WHERE companyNo = #{companyNo}
	</select>
	
	<!--  글보기 article -->
	<select id="readNotice" parameterType="Long" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT companyNo, notice, c.memberNo, m.name, companySubject, companyContent,
			companyDate, companyHitcount
		FROM company c
		JOIN member m ON m.memberNo = c.memberNo
		WHERE companyNo = #{companyNo}
	</select>
	
	<!-- 조회수 카운트 증가 -->
	<update id="updateHitCount" parameterType="Long">
		UPDATE company SET companyHitcount = companyHitcount+1 
			WHERE companyNo = #{companyNo}
	</update>
	
	<!-- 개별 파일 읽기 -->
	<select id="readFile" parameterType="Long" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT fileNo, companyNo, saveFilename, originalFilename, fileSize
		FROM CompanyFile
		WHERE fileNo = #{fileNo}
	</select>
	
	<!-- 삭제 -->
	<!-- 글 삭제 -->
	<delete id="deleteNotice" parameterType="Long">
		DELETE FROM company WHERE companyNo = #{companyNo}
	</delete>
	
	<!-- 파일 삭제 -->
	<delete id="deleteFile" parameterType="map">
		DELETE FROM companyFile WHERE ${field} = #{num}
	</delete>
	
	<!-- update 수정 -->
	<update id="updateNotice" parameterType="com.sp.app.admin.notice.CompanyNotice">
		UPDATE company SET companySubject = #{companySubject},
			companyContent = #{companyContent}, notice = #{notice}
		WHERE companyNo = #{companyNo}
	</update>
	
	
	<!-- 이전글  -->
	<select id="preReadNotice" parameterType="map" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT companyNo, companySubject
		FROM company c
		JOIN member m ON m.memberNo = c.memberNo
		<where>
			<if test="keyword != null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			AND (companyNo &gt; #{companyNo})
		</where>
		ORDER BY companyNo ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 다음글  -->
	<select id="nextReadNotice" parameterType="map" resultType="com.sp.app.admin.notice.CompanyNotice">
		SELECT companyNo, companySubject
		FROM company c
		JOIN member m ON m.memberNo = c.memberNo
		<where>
			<if test="keyword != null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			AND (companyNo &lt; #{companyNo})
		</where>
		ORDER BY companyNo DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	
	
	
	
	
	
	

</mapper>