<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypage">
<!-- 나의 키워드 구독 리스트, 구독리스트 추가 -->
	<select id="readMyKeyword" parameterType="map" resultType="com.sp.app.mypage.Keyword">
		select keywordName, keywordNo from keyword where memberNo = #{memberNo} 
	</select>
	<insert id="insertMyKeyword" parameterType="map">
	    INSERT INTO keyword(keywordName, keywordNo, memberNo) VALUES 
	    (#{keywordName}, keyword_seq.NEXTVAL, #{memberNo})
	</insert>
	<!--
	<insert id="insertMyKeyword" parameterType="map">
	    INSERT INTO keyword(keywordName, keywordNo,memberNo) VALUES 
	    <foreach collection="keywordName" item="item" separator=",">
	    (#{item.keywordName}, keyword_seq.NEXTVAL, #{memberNo})
	    </foreach>
	</insert>
	  -->
	<update id="updateMyKeyword" parameterType="map">
		UPDATE keyword k JOIN authority a ON k.memberNo = a.memberNo
			SET keywordNo = #{keywordNo}
			WHERE a.memberNo = #{memberNo}
	</update>
	
	<delete id="deleteMyKeyword" parameterType="map">
		delete from keyword  WHERE memberNo = #{memberNo} and 
			keywordName = #{keywordName}  
	</delete>
<!-- 나의 회원정보 리스트(memberNo, email, pwd, name, nickname, birth, gender, -->	
	<select id="readMyInfo" parameterType="String"  resultType="com.sp.app.member.Member">
		SELECT m.memberNo, email, name, nickName, pwd, TO_CHAR(birth, 'YYYY-MM-DD') birth, 
			gender, modifyDate, recentDate, profile, authority, enabled, memberShip
		FROM member m
		JOIN Authority a ON m.memberNo = a.memberNo
		WHERE email = #{email}
	</select>
	
	<update id="updateMyInfo" parameterType="com.sp.app.member.Member">
		UPDATE member m JOIN authority a ON a.memberNo = m.memberNo
		SET m.email = #{email}, m.name= #{name}, 
		m.nickName= #{nickName}, m.birth = TO_DATE(#{birth},'YYYY-MM-DD')
	</update>
	
	<update id="updateMyInfoPwd" parameterType="com.sp.app.member.Member">
		UPDATE member m JOIN authority a ON a.memberNo = m.memberNo
		SET m.email = #{email}, m.pwd= #{pwd}, m.name= #{name}, 
		m.nickName= #{nickName}, m.birth = TO_DATE(#{birth},'YYYY-MM-DD')
	</update>
	<delete id="deleteMyInfo" parameterType="com.sp.app.member.Member">
		DELETE FROM member 
		where memberNo = #{memberNo}
	</delete>

<!-- 나의 댓글 리스트, 수정  -->
	<select id="readMyQnaReply" parameterType="map" resultType="com.sp.app.cs.qna.QnaReply">
		SELECT r.qnaAnswer, r.memberNo, nickName, q.qnaNo, qnaAContent, r.qnaARegdate, q.qnaContent,
			   qnaSubject, NVL(qnaAReplyCount, 0) qnaAReplyCount
		FROM QnaReply r
		JOIN member m ON r.memberNo = m.memberNo
		LEFT OUTER JOIN (
			SELECT qnaReply, COUNT(*) qnaAReplyCount
			FROM QnaReply
			WHERE qnaReply!=0
			GROUP BY qnaReply
		) a ON r.qnaAnswer = a.qnaReply
        JOIN qna q on q.qnaNo = r.qnaNo
		WHERE r.memberNo =#{memberNo}
		ORDER BY r.qnaAnswer DESC
	</select>
	
	<delete id="deleteMyQnaReply" parameterType="map">
		DELETE FROM qnaReply
		WHERE qnaAnswer= #{qnaAnswer} AND memberNo = #{memberNo}
	</delete>
<!--뉴스글 댓글 -->
	<select id="listReply" parameterType="map" resultType="com.sp.app.mypage.Reply">
		SELECT nr.replyNo, content, regDate,nr.newsNo, news.title, nr.memberNo, nickName, profile, news.originlink
		FROM newsReply nr
		JOIN member m ON m.memberNo = nr.memberNo
        JOIN news on nr.newsNo = news.newsNo
		WHERE nr.memberNo = #{memberNo}
		ORDER BY regDate
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM newsReply
		WHERE replyNo = #{replyNo} AND memberNo = #{memberNo}
	</delete>
<!-- 나의 북마크  -->
	<select id="readMyBookmark" parameterType="Long"  resultType="com.sp.app.mypage.Bookmark">
		SELECT bookmarkNum, n.newsNo, n.originLink,n.title,  memberNo, bookmarkName FROM Bookmark bm
			JOIN  news n ON bm.newsNo = n.newsNo
			WHERE memberNo = #{memberNo}
	</select>

	<update id="deleteMyBookmark" parameterType="map">
		DELETE FROM bookMark
		WHERE bookmarkNum = #{bookmarkNum} and memberNo = #{memberNo}		
	</update>

	<select id="readNews" resultType="com.sp.app.news.News">
		SELECT n.newsNo, title, originLink, hitCount, categoryNo, NVL(bookMarked, 0) bookMarked
		FROM NEWS n
		LEFT OUTER JOIN(
		    SELECT newsNo, COUNT(*) bookMarked
		    FROM bookmark bm
		    JOIN member m ON m.memberNo = bm.memberNo
		    WHERE m.memberNo = #{memberNo}
		    GROUP BY newsNo
		) bm ON bm.newsNo = n.newsNo
		WHERE n.newsNo = #{newsNo}
		ORDER BY newsNo
	</select>
<!-- 회원 이미지, 전화번호, 이메일, 개인정보 수정-->
<!-- 회원 이미지, 전화번호, 이메일, 개인정보 삭제 -->
<!-- 회원탈퇴? -->
<!-- 즐겨찾기한 회원리스트 select -->
<!-- 즐겨찾기한 회원리스트 insert ? -->
<!-- 즐겨찾기한 회원리스트 delete -->
<!-- 작성한 댓글 확인  select -->
<!-- 북마크한 뉴스기사 분류(bookmarkType(북마크날짜, 카테고리별 검색)  -->

</mapper>